# Terraform Block
terraform {
  required_version = ">= 1.0.0"
  required_providers {
    azurerm = {
      source = "hashicorp/azurerm"
      version = ">= 2.0" 
    }
  }
}

# Provider Block
provider "azurerm" {
  # skip_provider_registration = "true" # Skip provider registration can be useful if you use a restricted Azure Env.
  features {}
}

# Create a resource group or import an exsisting one
# Import command: terraform import azurerm_resource_group.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/example

resource "azurerm_resource_group" "claudio_rg" {
  name     = "claudio_rg"
  location = "East US"
  tags = {
billingReference  = "HR Department"
cmdbReference       = "cmdbReference"
hostingRestrictions = "Global"
  }
}

# Create a Virtual Network
resource "azurerm_virtual_network" "vnet" {
  name                = "vnet-test"
  address_space       = ["10.0.0.0/16"]
  location            = azurerm_resource_group.claudio_rg.location
  resource_group_name = azurerm_resource_group.claudio_rg.name
  tags = azurerm_resource_group.claudio_rg.tags
}

# Create WebTier Subnet
resource "azurerm_subnet" "websubnet" {
  name                 = "websubnet"
  resource_group_name  = azurerm_resource_group.claudio_rg.name
  virtual_network_name = azurerm_virtual_network.vnet.name
  address_prefixes     = ["10.0.1.0/24"]  
}

# Create Network Security Group (NSG)
resource "azurerm_network_security_group" "web_subnet_nsg" {
  name                = "${azurerm_subnet.websubnet.name}-nsg"
  location            = azurerm_resource_group.claudio_rg.location
  resource_group_name = azurerm_resource_group.claudio_rg.name
}

# Associate NSG and Subnet
resource "azurerm_subnet_network_security_group_association" "web_subnet_nsg_associate" {
  depends_on = [ azurerm_network_security_rule.web_nsg_rule_inbound] # Every NSG Rule Association will disassociate NSG from Subnet and Associate it, so we associate it only after NSG is completely created - Azure Provider Bug https://github.com/terraform-providers/terraform-provider-azurerm/issues/354    
  subnet_id                 = azurerm_subnet.websubnet.id
  network_security_group_id = azurerm_network_security_group.web_subnet_nsg.id
}


# Create NSG Rules
## Locals Block for Security Rules
locals {
  web_inbound_ports_map = {
    "100" : "80", # If the key starts with a number, you must use the colon syntax ":" instead of "="
    "110" : "443",
    "120" : "22"
  } 
}
## NSG Inbound Rule for WebTier Subnets
resource "azurerm_network_security_rule" "web_nsg_rule_inbound" {
  for_each = local.web_inbound_ports_map
  name                        = "Rule-Port-${each.value}"
  priority                    = each.key
  direction                   = "Inbound"
  access                      = "Allow"
  protocol                    = "Tcp"
  source_port_range           = "*"
  destination_port_range      = each.value 
  source_address_prefix       = "*"
  destination_address_prefix  = "*"
  resource_group_name         = azurerm_resource_group.claudio_rg.name
  network_security_group_name = azurerm_network_security_group.web_subnet_nsg.name
}
